[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\trana\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\trana\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Eclipse Adoptium Java 21.0.1)
[debug] Load.defaultLoad until apply took 212.9678ms
[debug]                 Load.loadUnit: plugins took 110.5448ms
[debug]                 Load.loadUnit: defsScala took 0.6776ms
[debug] [Loading] Scanning directory C:\Quan\Data Dashboard\project\project
[debug]                   Load.loadUnit: mkEval took 7.9995ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Quan\Data Dashboard\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 25.2734 ms
[info] loading settings for project data-dashboard-build-build from metals.sbt ...
[debug]                     Load.resolveProject(data-dashboard-build-build) took 46.2217ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id data-dashboard-build-build, base: C:\Quan\Data Dashboard\project\project, plugins: List(<none>))) took 105.0057ms
[debug] [Loading] Done in C:\Quan\Data Dashboard\project\project, returning: (data-dashboard-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 560.6323ms
[debug]                 Load.loadUnit: cleanEvalClasses took 6.778ms
[debug]               Load.loadUnit(file:/C:/Quan/Data%20Dashboard/project/project/, ...) took 690.3073ms
[debug]             Load.apply: load took 823.3445ms
[debug]             Load.apply: resolveProjects took 5.6516ms
[debug]             Load.apply: finalTransforms took 72.9288ms
[debug]             Load.apply: config.delegates took 11.3615ms
[debug]             Load.apply: Def.make(settings)... took 511.3771ms
[debug]             Load.apply: structureIndex took 119.313ms
[debug]             Load.apply: mkStreams took 2.1795ms
[info] loading project definition from C:\Quan\Data Dashboard\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 2572.9745ms
[debug]           Load.loadUnit: defsScala took 0.006ms
[debug] [Loading] Scanning directory C:\Quan\Data Dashboard\project
[debug]             Load.loadUnit: mkEval took 0.3866ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Quan\Data Dashboard\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.6555 ms
[info] loading settings for project data-dashboard-build from metals.sbt,idea1.sbt ...
[debug]               Load.resolveProject(data-dashboard-build) took 18.8008ms
[debug]             Load.loadTransitive: finalizeProject(Project(id data-dashboard-build, base: C:\Quan\Data Dashboard\project, plugins: List(<none>))) took 22.0065ms
[debug] [Loading] Done in C:\Quan\Data Dashboard\project, returning: (data-dashboard-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 93.1545ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.5283ms
[debug]         Load.loadUnit(file:/C:/Quan/Data%20Dashboard/project/, ...) took 2671.872ms
[debug]       Load.apply: load took 2674.5745ms
[debug]       Load.apply: resolveProjects took 0.1452ms
[debug]       Load.apply: finalTransforms took 23.7956ms
[debug]       Load.apply: config.delegates took 0.5611ms
[debug]       Load.apply: Def.make(settings)... took 77.0704ms
[debug]       Load.apply: structureIndex took 31.7792ms
[debug]       Load.apply: mkStreams took 0.0042ms
[info] loading project definition from C:\Quan\Data Dashboard\project
[debug] Evaluating tasks: bloopInstall
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[success] Generated .bloop\data-dashboard-build.json
[success] Total time: 3 s, completed 13:35:09, 15 thg 4, 2024
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5569.207ms
[debug]     Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Quan\Data Dashboard
[debug]       Load.loadUnit: mkEval took 0.3403ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(bloop.integrations.sbt.BloopPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(bloop.integrations.sbt.BloopPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,bloop.integrations.sbt.BloopPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.4878 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 42.4915ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Quan\Data Dashboard, plugins: List(<none>))) took 46.5768ms
[debug] [Loading] Done in C:\Quan\Data Dashboard, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 142.5464ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.7082ms
[debug]   Load.loadUnit(file:/C:/Quan/Data%20Dashboard/, ...) took 5722.2825ms
[debug] Load.apply: load took 5754.3828ms
[debug] Load.apply: resolveProjects took 0.1378ms
[debug] Load.apply: finalTransforms took 23.4838ms
[debug] Load.apply: config.delegates took 0.5895ms
[debug] Load.apply: Def.make(settings)... took 54.537ms
[debug] Load.apply: structureIndex took 18.0721ms
[debug] Load.apply: mkStreams took 0.0041ms
[info] set current project to CS-C2120 Quan's Data Dashboard (in build file:/C:/Quan/Data%20Dashboard/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 64371 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 64371, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to CS-C2120 Quan's Data Dashboard (in build file:/C:/Quan/Data%20Dashboard/)
[debug] > Exec(idea-shell, None, None)
